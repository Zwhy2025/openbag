name: CI

on:
  push:
    branches: [ "master", "develop" ]
  pull_request:
    branches: [ "master", "develop" ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      
    - name: 设置Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: 构建Docker镜像
      run: |
        docker build -t robotics-ci:latest .
        
    - name: 运行构建容器并执行构建
      run: |
        docker run --rm \
          -v ${{ github.workspace }}:/workspace \
          -w /workspace \
          --privileged \
          robotics-ci:latest \
          bash -c "
            echo '开始自动化构建流程...' &&
            echo '1. 更新系统依赖库...' &&
            ./tools/lib_update.sh &&
            echo '2. 执行项目构建...' &&
            ./tools/build.sh &&
            echo '3. 验证构建产物...' &&
            ls -la build/ &&
            ls -la build/examples/ &&
            echo '构建完成！'
          "
    - name: 输出构建信息
      run: |
        echo "构建分支: ${{ github.ref_name }}"
        echo "提交哈希: ${{ github.sha }}"
        echo "构建时间: $(date)"
        
  docker-build:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'
    
    steps:
    - name: 检出代码
      uses: actions/checkout@v4
      
    - name: 设置Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: 构建并验证Docker镜像
      run: |
        echo "构建生产Docker镜像..."
        docker build -t robotics-project:${{ github.sha }} .
        docker build -t robotics-project:latest .
        
        echo "验证镜像构建成功..."
        docker images | grep robotics-project
        
        echo "测试容器启动..."
        docker run --rm robotics-project:latest bash -c "
          echo '验证环境配置...' &&
          which cmake &&
          which g++ &&
          echo '环境验证完成！'
        "
